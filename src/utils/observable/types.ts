/**
 * Интерфейс "Слушатель".
 * Чтобы реализовать интерфейс в любом классе.
 */
export interface IObservable<State> {
  /**
   * Подписка на изменение состояния
   * @param listener Функция, которая будет вызываться после установки состояния
   * @return Функция для отписки
   */
  subscribe(listener: () => void): () => void;

  /**
   * Выборка текучего состояния
   */
  getState(): State
}
